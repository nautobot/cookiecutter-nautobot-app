---
name: "CI"
concurrency:  # Cancel any existing runs of this workflow for this same PR
  group: "{% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}"
  cancel-in-progress: true
on: # yamllint disable-line rule:truthy rule:comments
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "v*"
  pull_request: ~

jobs:
  changelog:
    if: >
      contains(fromJson('["develop","ltm-1.6","ltm-2.4"]'), github.base_ref) &&
      (github.head_ref != 'main') && (!startsWith(github.head_ref, 'release'))
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: "0"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "2.1.3"
      - name: "Check for changelog entry"
        run: |
          git fetch --no-tags origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
          poetry run towncrier check --compare-with origin/${{ github.base_ref }}
  qa:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "2.1.3"
          poetry-install-options: "--only dev,docs"
      - name: "Linting: ruff"
        run: "poetry run invoke ruff"
      - name: "Linting: yamllint"
        run: "poetry run invoke yamllint"
      - name: "Linting: pylint"
        run: "poetry run invoke pylint"
      - name: "Linting: markdownlint"
        run: "poetry run invoke markdownlint"
      - name: "Docs: mkdocs build check"
        run: "poetry run invoke build-and-check-docs"
      - name: "Testing: poetry lock"
        run: "poetry run invoke lock --check"
      - name: "Testing: unittest"
        run: "poetry run invoke unittest"
