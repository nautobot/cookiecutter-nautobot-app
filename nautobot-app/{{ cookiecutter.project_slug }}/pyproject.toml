[tool.poetry]

{%- if cookiecutter.open_source_license == 'Apache-2.0' %}

{%- endif %}
name = "{{ cookiecutter.app_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.open_source_license }}"
readme = "README.md"
homepage = "{{ cookiecutter.repo_url }}"
repository = "{{ cookiecutter.repo_url }}"
documentation = "{{ cookiecutter.docs_app_url }}/"
keywords = ["nautobot", "nautobot-app", "nautobot-plugin"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
packages = [{ include = "{{ cookiecutter.app_name }}" }]
include = [
    # Poetry by default will exclude files that are in .gitignore
    "{{ cookiecutter.app_name }}/static/{{ cookiecutter.app_name }}/docs/**/*",
]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
# Used for local development
nautobot = "^{{ cookiecutter.min_nautobot_version }}"

[tool.poetry.group.dev.dependencies]
coverage = "*"
django-debug-toolbar = "*"
invoke = "*"
ipython = "*"
black = "*"
pylint = "*"
pylint-django = "*"
pylint-nautobot = "*"
yamllint = "*"
toml = "*"
Markdown = "*"
# Render custom markdown for version added/changed/remove notes
markdown-version-annotations = "1.0.1"
# Rendering docs to HTML
mkdocs = "1.6.0"
# Material for MkDocs theme
mkdocs-material = "9.5.32"
# Automatic documentation from sources, for MkDocs
mkdocstrings = "0.25.2"
mkdocstrings-python = "1.10.8"

[tool.poetry.extras]
all = []

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins = "pylint_django, pylint_nautobot"
ignore = ".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx = "^(_|test_|Meta$)"

[tool.pylint.messages_control]
disable = """,
    line-too-long
"""

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint-nautobot]
supported_nautobot_versions = ["{{ cookiecutter.min_nautobot_version }}"]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
